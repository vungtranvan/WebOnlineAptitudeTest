﻿@{ ViewBag.Title = "Home Page"; }

<div class="top-bar  bg-theme-2">

    <!-- BEGIN: Breadcrumb -->
    <div class="top-bar-question align-middle bg-gray-400 rounded relative">

    </div>

    <div class="top-bar-submit align-middle bg-gray-400 rounded ">
        <div class="h-full w-full align-middle bg-yellow-600 rounded col-span-2 relative">
            <button id="aptitutest_form_submit" type="button" class="button w-full h-full inline-block mr-1 mb-2 bg-theme-9 text-white inline-flex items-center text-xl font-medium leading-none"> Submit <i data-loading-icon="hearts" data-color="white" class="w-10 h-10 ml-auto"></i> </button>
        </div>
    </div>

    <div class="top-bar-time ">
        @*<div>
        a
           </div>*@
        <div class="align-middle bg-yellow-600 rounded relative w-full h-full">
            <div class="w-full count-down-percent h-full bg-theme-1 rounded flex justify-center align-middle "></div>
            <p class="rounded count-down h-auto text-lg text-white absolute">00:00</p>
        </div>
        <div class="align-middle bg-yellow-600 rounded relative w-full h-full">
            <div class="w-full count-down-percent-shedule h-full bg-theme-6 rounded flex justify-center align-middle "></div>
            <p class="rounded count-down-shedule h-auto text-lg text-white absolute">00:00</p>
        </div>
    </div>
    <!-- END: Breadcrumb -->
</div>

<form action="" id="aptitutest_form" method="post" class="form-question">
</form>

@section Scripts{
    <script>


        $(function () {



            let checkQuestUrl = '@Url.Action("CheckQuest", "Home")';
            let startQuestQuestUrl = '@Url.Action("StartQuest", "Home")';
            let createQuestQuestUrl = '@Url.Action("CreateQuest", "Home")';

            let countdown = 0;
            let historyTestId = -1;
            let confirmUrl = '@Url.Action("ConfirmTest", "Home")';
            let isContinute = false;



            $("#aptitutest_form_submit").on("click", function () {
                $('#modal-previewConfirmSubmitForm').modal('show');
            });

            $('#modal-previewConfirmSubmitForm:contains("Do you want to submit")').off('click').on('click', function (e) {
                $('#modal-previewConfirmSubmitForm').modal('hide');
                submitForm();
            });

            function submitForm( timeout = false ) {
                clearInterval(countdown);

                $(".count-down-percent").css("animation-play-state", "paused");

                resultQuest = [];

                $.each($(".question"), function (i, q) {
                    let QuestionId = $(this).find(".questId").val();

                    let Result = "";

                    let Answer = $(this).find(".awnsers");
                    $.each(Answer, function () {
                        if ($(this).find(".corect").is(":checked")) {
                            Result += $(this).find(".corect").val() + ",";
                        }
                    })

                    resultQuest.push({
                        "id": i,
                        "QuestionId": QuestionId,
                        "Result": Result.slice(0, -1)
                    });

                });
                ajax('{ resultQuest : ' + JSON.stringify(resultQuest) +
                    `, historyTestId: "` + historyTestId + `"}`, confirmUrl, function (data) {

                        switch (data.Status) {
                            //case "TestScheduleEnd":
                            //    showAlertModal('Your exam expiration<br/> Call the examiner', "schedule-ended");

                            //    $('#modal-previewAlert-schedule-ended').off('click').on('click', function (e) {
                            //        window.location = '/logout';
                            //    });
                            //    break;
                            default:
                                let timespent = Math.floor(data.TotalTime / 60) + ":" + (data.TotalTime - (Math.floor(data.TotalTime / 60) * 60) + 1);
                                if (timeout != false) {
                                    
                                    let timeoutAlert = `<h5 class="text-lg text-theme-12 font-medium leading-none mt-3">Spent ` + timeout+ ` is timeout</h5>
                                            <h5 class="text-lg text-theme-12 font-medium leading-none mt-3">Spent ` + timespent + 2 + `s</h5>
                                            <h5 class="text-lg text-theme-6 font-medium leading-none mt-3">Corect mark(s) `+ data.CorectMark + `/` + data.TotalMark + `</h5>
                                               <h5 class="text-2xl text-theme-9 font-medium leading-none mt-3"> Your score `+ data.PercentMark + `%</h5>`;
                                    showAlertModal(timeoutAlert, "success");

                                } else {
                                  
                                    let successAlert = `<h5 class="text-lg text-theme-12 font-medium leading-none mt-3">Spent `+timespent+`s</h5>
                                            <h5 class="text-lg text-theme-6 font-medium leading-none mt-3">Corect mark(s) `+ data.CorectMark + `/` + data.TotalMark + `</h5>
                                               <h5 class="text-2xl text-theme-9 font-medium leading-none mt-3"> Your score `+ data.PercentMark + `%</h5>`;
                                    showAlertModal(successAlert, "success");
                                }
                                $('#modal-previewAlert-success').off('click').on('click', function (e) {
                                    $('#modal-previewAlert-success').modal('hide');
                                    createQuest($('#candidate-codeId').text());
                                });

                                break;
                        }




                    });
            }
            createQuest($('#candidate-codeId').text());

            //create quest
            function createQuest(CandidateId) {
                ajax(`{ CandidateId: ` + CandidateId + `}`, checkQuestUrl, function (res) {
                 
                    let endDate = new Date(parseInt(res.testScheduleEndValue.replace('/Date(', '')));
                    let startDate = new Date(parseInt(res.testScheduleStartValue.replace('/Date(', '')));

                    //return false;
                    switch (res.Status) {
                        case "NotInSchedule":
                            showAlertModal('You are not in the exam schedule <br/> Call the examiner', "not-in-schedule");

                            $('#modal-previewAlert-not-in-schedule').off('click').on('click', function (e) {
                                window.location = '/logout';
                            });

                            setTimeout(function () {
                                $('#modal-previewAlert').modal('hide');
                                window.location = '/logout';
                            }, 20000);
                            break;
                        case "Beginer":
                            $('#modal-previewConfirmPolicy .btn-CancelModalPolicy').html(`<a href="/logout">Do it later</a>`);
                            $('#modal-previewConfirmPolicy .text-modal').prepend(`
                                                <h2 class="font-semibold">Schedule from ` + res.testScheduleStart + ` to ` + res.testScheduleEnd + `<h2/>
                                                <hr/>`);
                            $('#modal-previewConfirmPolicy').modal('show');


                            $('#modal-previewConfirmPolicy .btn-okConfirm').off('click').on('click', function (e) {
                                $('#modal-previewConfirmPolicy').modal('hide');

                                if (new Date($.now()) > endDate) {
                                    showAlertModal('Your exam not start<br/> Schedule: ' + res.testScheduleStart + `to ` + res.testScheduleEnd, "schedule-ended");

                                    $('#modal-previewAlert-schedule-ended').off('click').on('click', function (e) {
                                        window.location = '/logout';
                                    });
                                } else if (new Date($.now()) < startDate) {
                                    showAlertModal('Your exam not start<br/> Schedule: ' + res.testScheduleStart + `to ` + res.testScheduleEnd, "schedule-start");

                                    $('#modal-previewAlert-schedule-start').off('click').on('click', function (e) {
                                        window.location = '/logout';
                                    });
                                }

                                else {
                                    let startAlert = `
                                                <h2 class="text-2xl font-medium leading-none mt-3 mb-3">` + res.currentCategoryName + ` Examinations <h2/>
                                                <hr/>
                                                <h5 class="font-extrabold">Do you want start the Exam<h5>
                                                <hr/>`;
                                    $('#modal-previewConfirm .text-modal').html(startAlert);
                                    $('#modal-previewConfirm .btn-CancelModal').html(`<a href="/logout">Do it later</a`);
                                    $('#modal-previewConfirm').modal('show');

                                    $('#modal-previewConfirm .btn-okConfirm').off('click').on('click', function (e) {
                                        ajax(`{ historyTestId: ` + res.historyTestId + `}`, startQuestQuestUrl, function (resStart) {
                                            if (resStart.Status == "Success") {
                                                createQuest(CandidateId);
                                            }
                                        });

                                        $('#modal-previewConfirm').modal('hide');
                                    });

                                    $('#modal-previewConfirm').click(function () {
                                        window.location = '/logout';
                                    });

                                    $('#modal-previewConfirm .modal__content').on('click', function (e) {
                                        e.stopPropagation();
                                    });
                                }
                            });
                            $('#modal-previewConfirmPolicy').click(function () {
                                window.location = '/logout';
                            });
                            $('#modal-previewConfirmPolicy .modal__content').on('click', function (e) {
                                e.stopPropagation();
                            });
                            isContinute = true;
                            break;
                        case "NotStart":
                            if (new Date($.now()) > endDate) {
                                showAlertModal('Your exam expiration<br/> Call the examiner', "schedule-ended");

                                $('#modal-previewAlert-schedule-ended').off('click').on('click', function (e) {
                                    window.location = '/logout';
                                });
                            } else {
                                let startAlert = `
                                                <h2 class="text-2xl font-medium leading-none mt-3 mb-3">` + res.currentCategoryName + ` Examinations <h2/>
                                                <hr/>
                                                <h5 class="font-extrabold">Do you want start the Exam<h5>
                                                <hr/>`;
                                $('#modal-previewConfirm .text-modal').html(startAlert);
                                $('#modal-previewConfirm .btn-CancelModal').html(`<a href="/logout">Do it later</a`);
                                $('#modal-previewConfirm').modal('show');

                                $('#modal-previewConfirm .btn-okConfirm').off('click').on('click', function (e) {
                                    ajax(`{ historyTestId: ` + res.historyTestId + `}`, startQuestQuestUrl, function (resStart) {
                                        if (resStart.Status == "Success") {
                                            createQuest(CandidateId);
                                        }
                                    });

                                    $('#modal-previewConfirm').modal('hide');
                                });

                                $('#modal-previewConfirm').click(function () {
                                    window.location = '/logout';
                                });

                                $('#modal-previewConfirm .modal__content').on('click', function (e) {
                                    e.stopPropagation();
                                });
                            }
                            isContinute = true;
                            break;
                        case "Continue":

                            if (new Date($.now()) > endDate) {
                                showAlertModal('Your exam expiration<br/> Call the examiner', "schedule-ended");

                                $('#modal-previewAlert-schedule-ended').off('click').on('click', function (e) {
                                    window.location = '/logout';
                                });
                            } else {

                                if (isContinute == false) {
                                    showAlertModal('Continue', "continue");
                                }

                                ajax(`{ historyTestId: ` + res.historyTestId + `}`, createQuestQuestUrl, function (resQuestContent) {
                                    let content = ``;
                                    let menu = ``;
                                    let menumobile = ``;
                                    
                                    $.each(resQuestContent.data, function (i, q) {
                                        //add content
                                        content += `
                                            <div class="box question mt-5" id="q_`+ q.Id + `">
                                                <div class="pb-3 pt-3 pr-2 pl-2">
                                                    <div class="flex items-center">`+ (i + 1) + `.&nbsp;&nbsp;` + q.Name + `&nbsp;&nbsp; [Choose ` + q.countCorect + ` Answer(s)]&nbsp;&nbsp;[` + q.Mark + ` Mark(s)] </div>
                                                </div>
                                              <input value="`+ q.Id + `" hidden class="questId">`;


                                        $.each(q.Answers, function (j, a) {
                                            switch (q.countCorect) {
                                                case "1":
                                                    content +=
                                                        `<div class="awnsers">
                                                <div class="border-b border-t text-gray-600 border-gray-200 flex items-center">

                                                    <div class="flex items-center justify-center p-3">
                                                        <input  name="q_`+ q.Id + `"  value="` + a.AnswerInQuestion + `" type="radio" class="corect input border border-gray-500">
                                                    </div>

                                                    <div class="p-2"> `+ a.Name + ` </div>
                                                </div>
                                            </div>`;
                                                    break;
                                                default:
                                                    content +=
                                                        `<div class="awnsers">
                                                <div class="border-b border-t text-gray-600 border-gray-200 flex items-center">

                                                    <div class="flex items-center justify-center p-3">
                                                        <input name="q_`+ q.id + `" value="` + a.AnswerInQuestion + `" type="checkbox" class="corect input border border-gray-500">
                                                    </div>

                                                    <div class="p-2"> `+ a.Name + ` </div>
                                                </div>
                                            </div>`;
                                                    break;
                                            }
                                        });

                                        content += `</div>`;


                                        // add menu
                                        menu +=
                                            `<li>
                                             <a href="#q_`+ q.Id + `" class="side-menu" target="_self">
                                               <div class="side-menu__icon"> `+ (i + 1) + `. </div>
                                               <div class="side-menu__title"> Question `+ (i + 1) + ` </div>
                                             </a>
                                         </li>`;
                                        menumobile += `
                                        <li>
                                            <a href="#q_`+ q.Id + `" class="menu" target="_self">
                                                <div class="menu__icon"> `+ (i + 1) + `. </div>
                                                <div class="menu__title">  Question `+ (i + 1) + `</div>
                                            </a>
                                        </li>`;

                                    });
                                    $("#aptitutest_form").html(content);
                                    $("#sidemenu_content_" + res.currentCategoryId).html(menu);
                                    $(".sidemenu_mobile_content").html("");
                                    $("#sidemenu_mobile_content_" + res.currentCategoryId).html(menumobile);


                                
                                    historyTestId = res.historyTestId;
                                  

                                    createMenu(res.currentCategoryId);
                                    console.log(res);
                                    let sheduleEnd = new Date(parseInt(res.testScheduleEndValue.replace('/Date(', '')));
                                    checkTime(res.timeSecond, sheduleEnd);

                                })
                            }

                            break;
                        case "AllOver":
                            let htmlOver = `<h3 class="text-4xl text-theme-1 font-medium leading-none text-center">Your exam is over</h3> <table class="w-full">`;
                            $.each(res.data, function (i, d) {
                                let timespent = "";
                                if ((d.TotalTime - (Math.floor(d.TotalTime / 60) * 60) - 1) <= 0) {
                                     timespent = "expired";

                                } else {
                                     timespent = Math.floor(d.TotalTime / 60) + ":" + (d.TotalTime - (Math.floor(d.TotalTime / 60) * 60) - 1)+"s";
                                }

                                htmlOver += `<tr>
                                <td> <div class="text-lg text-theme-6 font-medium leading-none mt-3  p-3 font-bold" >` + d.CategoryExam + `: <div/> <td/>
                                <td > <div class="text-lg text-theme-9 font-medium leading-none mt-3  p-3"> Correct: <span class="text-lg text-theme-6 font-medium leading-none font-bold">` + d.CorectMark + `/` + d.TotalMark + `</span> <div/> <td/>
                                <td > <div class="text-lg text-theme-6 font-medium leading-none  mt-3  font-bold"> (` + d.PercentMark +`%)<div/> <td/>
                                <td > <div class="text-lg text-theme-9 font-medium leading-none mt-3  p-3"> ` + timespent +`<div/> <td/>

                                <td > <div class="text-lg text-theme-9 font-medium leading-none mt-3  p-3"> from <span class="float-right text-theme-6 ">` + d.DateStartTest + `</span> <br/> to<span class="float-right text-theme-6 ">` + d.DateEndTest +`<span/><div/> <td/>


                                 <tr/>`;
                            });
                            showAlertModal(htmlOver, "all-over");
                            htmlOver += `<table/>`;
                            $('#modal-previewAlert-all-over').off('click').on('click', function (e) {
                                window.location = '/logout';
                            });

                            break;
                    }
                    });


            };

            function createMenu(id) {

                let clear =  $(".memu-with-child");

                clear.removeClass("side-menu-with-child-open");
                clear.find(".side-menu").removeClass("side-menu--open side-menu--active side-menu-x");
                clear.find(".side-menu").attr("onclick", "");


                clear.find("ul").removeClass("side-menu__sub-open");
                clear.find("ul").css("display", "none");

                let element = $(".sidemenu_" + id);

                element.addClass("side-menu-with-child-open");
                element.find(".side-menu").addClass("side-menu--open side-menu--active side-menu-x");
                element.find(".side-menu").attr("onclick","sideMenu(this)");


                element.find("ul").addClass("side-menu__sub-open");
                element.find("ul").css("display", "block");

            }


            let endtime;
            let shedulelasttime;
            function checkTime(seconndlast,shedulelast) {
                clearInterval(countdown);
 
                endtime = new Date($.now());
                endtime.setSeconds(endtime.getSeconds() + seconndlast);
                shedulelasttime = shedulelast;
                let sheduleTimeProsess = Math.floor((shedulelasttime - new Date($.now())) / 1000);
                countdown = setInterval(countDown, 500);

                $(".count-down-percent").css("width", "100%");

                $(".count-down-percent").css("-webkit-animation", "none");

                setTimeout(function () {
                    $('.count-down-percent').css("-webkit-animation", seconndlast + "s" + " linear 0s 1 normal backwards running countdown");
                }, 10);

                console.log(sheduleTimeProsess)
                if (sheduleTimeProsess < 900) {
                    $(".count-down-percent").parent().css("top", "-16px");
                    $(".count-down-percent-shedule").parent().css("top", "-10px");

                    $(".count-down-percent-shedule").css("width", "100%");

                    $(".count-down-percent-shedule").css("-webkit-animation", "none");

                    setTimeout(function () {
                        $('.count-down-percent-shedule').css("-webkit-animation", sheduleTimeProsess + "s" + " linear 0s 1 normal backwards running countdown");
                    }, 10);
                }


            }
            function countDown() {
                let timeShow = [];
                let timeSheduleShow = [];
                let seconndCount = Math.floor((endtime - new Date($.now())) / 1000);
                let minuteShow = Math.floor(seconndCount / 60);
                let secondShow =  seconndCount - minuteShow * 60;

                timeShow[1] = (secondShow.toString().length == 1) ? ("0" + secondShow.toString()) : secondShow.toString();
                timeShow[0] = (minuteShow.toString().length == 1) ? ("0" + minuteShow.toString()) : minuteShow.toString();

                if (seconndCount < 0) {
                    submitForm($(".side-menu.side-menu--open .side-menu__title").html().toString());
                }


                let sheduleTimeCount = Math.floor((shedulelasttime - new Date($.now())) / 1000);

                let minuteSheduleShow = Math.floor(sheduleTimeCount / 60);
                let secondSheduleShow = sheduleTimeCount - minuteSheduleShow * 60;

                timeSheduleShow[1] = (secondSheduleShow.toString().length == 1) ? ("0" + secondSheduleShow.toString()) : secondSheduleShow.toString();
                timeSheduleShow[0] = (minuteSheduleShow.toString().length == 1) ? ("0" + minuteSheduleShow.toString()) : minuteSheduleShow.toString();

                if (sheduleTimeCount < 0) {
                    submitForm($(".side-menu.side-menu--open .side-menu__title").html().toString());
                }
                //console.log(timeSheduleShow.join(":"));
                //console.log(sheduleTimeCount);
                $(".count-down").html(timeShow.join(":"));

                if (sheduleTimeCount < 900) {
                    $(".count-down-shedule").html("Shedule End " + timeSheduleShow.join(":"));
                } 

            };


            function ajax(data, url, callback) {

                    $.ajax({
                        url: url,
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        success: function (res) {
                            try {
                                res.data = $.parseJSON(res.data)
                            } catch (e) {

                            }

                            callback(res);
                        }
                    });
                }

        });

        function showAlertModal(text,idname) {
            //$('#modal-previewAlert .text-modal').text(text);

            let modal = $('#modal-previewAlert').clone();
            $("#modal-previewAlert-" + idname).remove();
            modal.attr("id", "modal-previewAlert-" + idname);
            modal.find('.text-modal').html(text);
            if (idname == "all-over") {
                modal.find(".modal__content").addClass("modal__content--xl");
                modal.find("svg").remove();
                modal.find(".p-5.text-center").addClass("score-modal");
                modal.find(".p-5.text-center").removeClass("text-center");


            }



            modal.modal('show');
        }

        function sideMenu(element) {

            if ($(element).parent().find('ul').length) {
                if ($(element).parent().find('ul').first().is(':visible')) {
                    $(element).find('.side-menu__sub-icon').removeClass('transform rotate-180');
                    $(element).parent().removeClass('side-menu-with-child-open');

                    $(element).removeClass('side-menu--open');

                    $(element).parent().find('ul').first().slideUp({
                        done: function done() {
                            $(element).removeClass('side-menu__sub-open');
                        }
                    });
                } else {
                    $(element).find('.side-menu__sub-icon').addClass('transform rotate-180');
                    $(element).parent().addClass('side-menu-with-child-open');
                    $(element).addClass('side-menu--open');
                    $(element).parent().find('ul').first().slideDown({
                        done: function done() {
                            $(element).addClass('side-menu__sub-open');
                        }
                    });
                }
            }
        }
    </script>
}